<?xml version="1.0"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          xmlns:sparkcolorpicker="com.plumbee.stardust.view.components.sparkcolorpicker.*"
          paddingBottom="4" paddingTop="4" paddingLeft="4" paddingRight="4" >

    <fx:Script><![CDATA[
        import com.plumbee.stardust.controller.events.BackgroundChangeEvent;

        import mx.core.UIComponent;
        import mx.logging.ILogger;
        import mx.logging.Log;

        import starling.core.Starling;
        import starling.display.Image;
        import starling.display.Quad;
        import starling.textures.Texture;

        private static const LOG : ILogger = Log.getLogger(getQualifiedClassName(BackgroundProvider).replace("::", "."));

        private var _background : UIComponent;

        public function set background(bg : UIComponent) : void
        {
            _background = bg;
        }

        private function onHasBGChange() : void
        {
            dispatchEvent(new BackgroundChangeEvent(BackgroundChangeEvent.HAS_BACKGROUND, hasBackgroundCheckBox.selected));
        }

        private function onColorChange() : void
        {
            dispatchEvent(new BackgroundChangeEvent(BackgroundChangeEvent.COLOR, colorPicker.selectedColor));
        }

        private function onLoadImageClick() : void
        {
            dispatchEvent(new BackgroundChangeEvent(BackgroundChangeEvent.IMAGE, null));
        }

        public function setBgImagePosition(xc: Number, yc : Number) : void
        {
            if (_background.numChildren > 0)
            {
                _background.getChildAt(0).x = xc;
                _background.getChildAt(0).y = yc;
            }
            if (Starling.current.stage.numChildren > 1)
            {
                Starling.current.stage.getChildAt(0).x = StardusttoolMainView.leftColumnWidth + xc;
                Starling.current.stage.getChildAt(0).y = yc;
            }
        }

        public function setData(hasBackground : Boolean, backgroundColor : uint, backgroundImage : DisplayObject) : void
        {
            _background.removeChildren();
            _background.graphics.clear();
            var starlingInstance : Starling = Starling.current;
            if (starlingInstance.stage.numChildren > 1)
            {
                starlingInstance.stage.removeChildAt(0, true);
            }

            colorPicker.selectedItem = null;
            hasBackgroundCheckBox.selected = hasBackground;
            if (hasBackground)
            {
                if (backgroundImage)
                {
                    if (backgroundImage is Bitmap)
                    {
                        var image : Image = new Image(Texture.fromBitmapData(Bitmap(backgroundImage).bitmapData));
                        image.x = StardusttoolMainView.leftColumnWidth + _background.x;
                        image.y = _background.y;
                        Starling.current.stage.addChildAt(image, 0);
                    }
                    else
                    {
                        _background.addChild(backgroundImage); // MovieClip
                    }
                }
                else
                {
                    colorPicker.selectedItem = backgroundColor;
                    colorPicker.current.color = backgroundColor;

                    var quad : Quad = new Quad(_background.width, _background.height, backgroundColor);
                    quad.x = StardusttoolMainView.leftColumnWidth;
                    Starling.current.stage.addChildAt(quad, 0);
                }
            }
            else
            {
                colorPicker.selectedItem = null;
            }
            // TODO center background
        }

        private function onActAsForegroundChange() : void
        {
            if (actAsForegroundCheckBox.selected)
            {
                _background.depth = 1;
            }
            else
            {
                _background.depth = 0;
            }
        }

        ]]></fx:Script>

    <s:Rect includeInLayout="false" width="{width}" height="{height}">
        <s:stroke>
            <s:SolidColorStroke color="0x787878"/>
        </s:stroke>
        <s:fill>
            <s:SolidColor color="0x2F3B3F"/>
        </s:fill>
    </s:Rect>

    <s:CheckBox label="Background?" change="onHasBGChange()" id="hasBackgroundCheckBox"/>
    <s:CheckBox label="Act as foreground" change="onActAsForegroundChange()" id="actAsForegroundCheckBox"/>

    <s:VGroup id="settingsGroup" enabled="{hasBackgroundCheckBox.selected}">
        <s:HGroup verticalAlign="middle">
            <s:Label text="color"/>
            <sparkcolorpicker:SparkColorPicker id="colorPicker" change="onColorChange()"
                                               skinClass="com.plumbee.stardust.view.components.sparkcolorpicker.ColorPickerListSkin"/>
        </s:HGroup>

        <s:Button label="Or image" click="onLoadImageClick()" width="100%"/>
    </s:VGroup>


</s:VGroup>
