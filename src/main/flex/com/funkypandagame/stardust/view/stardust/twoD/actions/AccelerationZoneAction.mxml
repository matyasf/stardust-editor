<?xml version="1.0"?>
<twod:PropertyRendererBase xmlns:fx="http://ns.adobe.com/mxml/2009"
                           xmlns:s="library://ns.adobe.com/flex/spark"
                           xmlns:zones="com.funkypandagame.stardust.view.stardust.twoD.zones.*"
                           xmlns:twod="com.funkypandagame.stardust.view.stardust.twoD.*"
                           xmlns:components="com.funkypandagame.stardust.view.components.*"
                           xmlns:areas="com.funkypandagame.stardust.view.stardust.twoD.actions.areas.*"
                           nameText="Accel.{'\n'}area"
                           toolTip="Causes particles to be accelerated/decelerated when they are inside an area.">

    <fx:Script><![CDATA[
        import idv.cjcat.stardustextended.actions.AccelerationArea;

        import mx.collections.ArrayCollection;

        private const typeAC:ArrayCollection = new ArrayCollection(["constant", "linear"]);

        private function updateData():void {
            var dat:AccelerationArea = AccelerationArea(data);
            dat.inverted = isInvertedCheckBox.selected;
            dat.acceleration = parseFloat(accelerationTextInput.text);
            dat.useParticleDirection = useParticleDirectionCheckBox.selected;
            dat.direction = parseFloat(angleTextInput.text);
            if (typeDropDownList.selectedItem == "constant") {
                dat.accelerationType = 0;
            }
            else {
                dat.accelerationType = 1;
            }
        }

        override public function set data(d:Object):void {
            super.data = d;
            if (d == null) {
                return;
            }
            var dat:AccelerationArea = AccelerationArea(d);
            zc.setData(dat);
            accelerationTextInput.text = dat.acceleration.toString();
            isInvertedCheckBox.selected = dat.inverted;
            useParticleDirectionCheckBox.selected = dat.useParticleDirection;
            angleTextInput.text = dat.direction.toString();
            if (dat.accelerationType == 0) {
                typeDropDownList.selectedItem = "constant";
            }
            else {
                typeDropDownList.selectedItem = "linear";
            }
        }
        ]]></fx:Script>

    <twod:layout>
        <s:VerticalLayout/>
    </twod:layout>

    <s:HGroup verticalAlign="middle" >
        <s:Label text="Acceleration" />
        <components:CustomNumericStepper id="accelerationTextInput" width="50" change="updateData()" stepValue="0.1"/>

        <s:CheckBox id="isInvertedCheckBox" label="Inverted?" toolTip="Inverts the zone."
                    change="updateData()"/>

        <s:Label text="type:" />
        <s:DropDownList id="typeDropDownList" dataProvider="{typeAC}" change="updateData()" />

    </s:HGroup>

    <s:HGroup verticalAlign="middle" >

        <s:CheckBox id="useParticleDirectionCheckBox" label="Use particle direction?"
                    change="updateData()"/>

        <s:Label text="angle(degrees)" enabled="{!useParticleDirectionCheckBox.selected}"/>
        <components:CustomNumericStepper id="angleTextInput" width="50" change="updateData()"
                                         enabled="{!useParticleDirectionCheckBox.selected}" />

    </s:HGroup>

    <areas:AreaContainer id="zc" width="100%" />

</twod:PropertyRendererBase>
