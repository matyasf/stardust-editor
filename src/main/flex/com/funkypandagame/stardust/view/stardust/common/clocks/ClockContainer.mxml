<?xml version="1.0"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          paddingBottom="4" paddingTop="4" paddingLeft="4" paddingRight="4">
    <fx:Script><![CDATA[
        import com.funkypandagame.stardust.helpers.DropdownListVO;

        import idv.cjcat.stardustextended.common.clocks.Clock;
        import idv.cjcat.stardustextended.common.clocks.ImpulseClock;
        import idv.cjcat.stardustextended.common.clocks.RandomBurstClock;
        import idv.cjcat.stardustextended.common.clocks.SteadyClock;
        import idv.cjcat.stardustextended.common.emitters.Emitter;

        import mx.collections.ArrayCollection;
        import mx.core.IVisualElement;

        private const clocksAC:ArrayCollection = new ArrayCollection([
            new DropdownListVO("constant", SteadyClock, SteadyClockRenderer),
            new DropdownListVO("impulse", ImpulseClock, ImpulseClockRenderer),
            new DropdownListVO("random bursts", RandomBurstClock, RandomBurstClockRenderer)
        ]);

        private var emitter:Emitter;

        private function onSelChange():void
        {
            var it : DropdownListVO = DropdownListVO(ddl.selectedItem);
            emitter.clock = Clock(new it.stardustClass());
            populateData();
        }

        public function setData(_emitter : Emitter) : void
        {
            emitter = _emitter;
            if (emitter.clock is SteadyClock)
            {
                ddl.selectedIndex = 0;
            }
            else if (emitter.clock is ImpulseClock)
            {
                ddl.selectedIndex = 1;
            }
            else if (emitter.clock is RandomBurstClock)
            {
                ddl.selectedIndex = 2;
            }
            activeCheckBox.selected = emitter.active;
            ddl.validateProperties();
            populateData();
            validateNow();
        }

        private function populateData():void
        {
            var it : DropdownListVO = DropdownListVO(ddl.selectedItem);
            content.removeAllElements();
            var viewClass:IVisualElement = new it.viewClass();
            IClockRenderer(viewClass).setData(emitter.clock);
            content.addElement(viewClass);
        }

        private function onActiveChange():void
        {
            emitter.active = activeCheckBox.selected;
        }
        ]]></fx:Script>

    <s:HGroup verticalAlign="middle">
        <s:Label text="clock type:"/>
        <s:DropDownList id="ddl" dataProvider="{clocksAC}" change="onSelChange()"
                        labelField="name" requireSelection="true" selectedIndex="0"/>
        <s:CheckBox id="activeCheckBox" label="Active" change="onActiveChange()"
                toolTip="Enables/disables this emitter. If the emitter's particles are spawned from another emitter it will emit particles even if its disabled."/>
    </s:HGroup>
    <s:Group id="content"/>

</s:VGroup>