<?xml version="1.0"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          xmlns:sparkcolorpicker="com.funkypandagame.stardust.view.components.sparkcolorpicker.*"
          paddingBottom="4" paddingTop="4" paddingLeft="4" paddingRight="4"
          toolTip="Set a background/foreground for the simulation. The image *will* be saved with the simulation, which is likely something you dont want for the final version.">

    <fx:Script><![CDATA[

        import com.funkypandagame.stardust.controller.events.BackgroundChangeEvent;

        import mx.core.UIComponent;
        import mx.logging.ILogger;
        import mx.logging.Log;

        import starling.core.Starling;
        import starling.display.Image;
        import starling.display.Quad;
        import starling.textures.Texture;

        private static const LOG:ILogger = Log.getLogger(getQualifiedClassName(BackgroundProvider).replace("::", "."));

        private var _background:UIComponent;
        private var _starlingBackground:starling.display.DisplayObject;

        public function set background(bg:UIComponent):void {
            _background = bg;
        }

        private function onHasBGChange():void {
            dispatchEvent(new BackgroundChangeEvent(BackgroundChangeEvent.HAS_BACKGROUND, hasBackgroundCheckBox.selected));
        }

        private function onColorChange():void {
            dispatchEvent(new BackgroundChangeEvent(BackgroundChangeEvent.COLOR, colorPicker.selectedColor));
        }

        private function onLoadImageClick():void {
            dispatchEvent(new BackgroundChangeEvent(BackgroundChangeEvent.IMAGE, null));
        }

        public function setBgImagePosition(xc:Number, yc:Number):void {
            if (_background.numChildren > 0) {
                _background.getChildAt(0).x = xc;
                _background.getChildAt(0).y = yc;
            }
            if (_starlingBackground) {
                _starlingBackground.x = StardusttoolMainView.leftColumnWidth + xc;
                _starlingBackground.y = yc;
            }
        }

        public function setData(hasBackground:Boolean, backgroundColor:uint, backgroundImage:DisplayObject):void {
            _background.removeChildren();
            _background.graphics.clear();
            if (_starlingBackground && _starlingBackground.parent) {
                _starlingBackground.parent.removeChild(_starlingBackground);
            }

            colorPicker.selectedItem = null;
            hasBackgroundCheckBox.selected = hasBackground;
            if (hasBackground) {
                if (backgroundImage) {
                    if (backgroundImage is Bitmap) {
                        _starlingBackground = new Image(Texture.fromBitmapData(Bitmap(backgroundImage).bitmapData));
                        _starlingBackground.x = StardusttoolMainView.leftColumnWidth + _background.x;
                        _starlingBackground.y = _background.y;
                        Starling.current.stage.addChildAt(_starlingBackground, 0);
                    }
                    else {
                        _background.addChild(backgroundImage); // MovieClip
                    }
                }
                else {
                    colorPicker.selectedItem = backgroundColor;
                    colorPicker.current.color = backgroundColor;

                    _starlingBackground = new Quad(_background.width, _background.height, backgroundColor);
                    _starlingBackground.x = StardusttoolMainView.leftColumnWidth;
                    Starling.current.stage.addChildAt(_starlingBackground, 0);
                }
            }
            else {
                colorPicker.selectedItem = null;
                if (_starlingBackground && _starlingBackground is Image) {
                    Image(_starlingBackground).dispose();
                }
            }
        }

        private function onActAsForegroundChange():void {
            if (actAsForegroundCheckBox.selected) {
                if (_starlingBackground) {
                    Starling.current.stage.setChildIndex(_starlingBackground, Starling.current.stage.numChildren);
                }
                _background.depth = 1;
            }
            else {
                _background.depth = 0;
                if (_starlingBackground) {
                    Starling.current.stage.setChildIndex(_starlingBackground, 0);
                }
            }
        }
        ]]></fx:Script>

    <s:Rect includeInLayout="false" width="{width}" height="{height}">
        <s:stroke>
            <s:SolidColorStroke color="0x787878"/>
        </s:stroke>
        <s:fill>
            <s:SolidColor color="0x2F3B3F"/>
        </s:fill>
    </s:Rect>

    <s:CheckBox label="Background?" change="onHasBGChange()" id="hasBackgroundCheckBox"/>

    <s:VGroup enabled="{hasBackgroundCheckBox.selected}">
        <s:CheckBox label="Act as foreground" change="onActAsForegroundChange()" id="actAsForegroundCheckBox" />

        <s:HGroup verticalAlign="middle">
            <s:Label text="color"/>
            <sparkcolorpicker:SparkColorPicker id="colorPicker" change="onColorChange()"
                                               skinClass="com.funkypandagame.stardust.view.components.sparkcolorpicker.ColorPickerListSkin"/>
        </s:HGroup>

        <s:Button label="Or image" click="onLoadImageClick()" width="100%"/>
    </s:VGroup>


</s:VGroup>
